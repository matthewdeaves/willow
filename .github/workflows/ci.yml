name: CI

on:
  push:
    branches:
      - main
      - development
      - staging
      - 'feature/*'
  pull_request:
    branches:
      - main
      - development
      - staging

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        php-version: ['8.1', '8.2', '8.3']

    steps:
    - uses: actions/checkout@v4

    - name: Setup MySQL
      run: |
        sudo service mysql start
        mysql -e 'CREATE DATABASE IF NOT EXISTS cms_test;' -uroot -proot
        mysql -e 'SHOW DATABASES;' -uroot -proot

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-version }}
        extensions: mbstring, intl, pdo_mysql, pcntl, sockets, bcmath, zip
        coverage: xdebug

    - name: Install Composer dependencies
      run: |
        composer config platform.php ${{ matrix.php-version }}
        composer update --no-interaction --prefer-dist --ignore-platform-reqs

    - name: Copy Configs
      run: |
        cp docker/github/cms_app_local_github.php config/app_local.php
        cp docker/github/app_github.php config/app.php

    - name: Debug app_local.php
      run: cat "config/app_local.php"

    - name: Run PHPUnit
      run: php -d display_errors=on -d error_reporting=E_ALL vendor/bin/phpunit
      env:
        XDEBUG_MODE: coverage

    - name: Run PHP CodeSniffer
      run: vendor/bin/phpcs --standard=vendor/cakephp/cakephp-codesniffer/CakePHP src/ tests/

    - name: Run PHPStan
      run: php -d memory_limit=-1 vendor/bin/phpstan analyse src/
      continue-on-error: true