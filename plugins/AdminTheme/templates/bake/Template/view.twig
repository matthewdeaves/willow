{#
/**
 * CakePHP(tm) : Rapid Development Framework (https://cakephp.org)
 * Copyright (c) Cake Software Foundation, Inc. (https://cakefoundation.org)
 *
 * Licensed under The MIT License
 * For full copyright and license information, please see the LICENSE.txt
 * Redistributions of files must retain the above copyright notice.
 *
 * @copyright     Copyright (c) Cake Software Foundation, Inc. (https://cakefoundation.org)
 * @link          https://cakephp.org CakePHP(tm) Project
 * @since         2.0.0
 * @license       https://www.opensource.org/licenses/mit-license.php MIT License
 */
#}
<?php
/**
 * @var \{{ namespace }}\View\AppView $this
 * @var \{{ entityClass }} ${{ singularVar }}
 */
?>
{% set associations = {'BelongsTo': [], 'HasOne': [], 'HasMany': [], 'BelongsToMany': []}|merge(associations) %}
{% set fieldsData = Bake.getViewFieldsData(fields, schema, associations) %}
{% set associationFields = fieldsData.associationFields %}
{% set groupedFields = fieldsData.groupedFields %}
{% set pK = '$' ~ singularVar ~ '->' ~ primaryKey[0] %}
<?php
echo $this->element('actions_card', [
    'modelName' => '{{ singularHumanName }}',
    'controllerName' => '{{ pluralHumanName }}',
    'entity' => ${{ singularVar }},
    'entityDisplayName' => ${{ singularVar }}->{{ displayField }}
]);
?>
<div class="container my-4">
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-body">
                    <h2 class="card-title"><?= h(${{ singularVar }}->{{ displayField }}) ?></h2>
                    <table class="table table-striped">
{% if groupedFields['string'] %}
{% for field in groupedFields['string'] %}
{% if associationFields[field] is defined %}
{% set details = associationFields[field] %}
                        <tr>
                            <th><?= __('{{ details.property|humanize }}') ?></th>
                            <td><?= ${{ singularVar }}->hasValue('{{ details.property }}') ? $this->Html->link(${{ singularVar }}->{{ details.property }}->{{ details.displayField }}, ['controller' => '{{ details.controller }}', 'action' => 'view', ${{ singularVar }}->{{ details.property }}->{{ details.primaryKey[0] }}], ['class' => 'btn btn-link']) : '' ?></td>
                        </tr>
{% else %}
                        <tr>
                            <th><?= __('{{ field|humanize }}') ?></th>
                            <td><?= h(${{ singularVar }}->{{ field }}) ?></td>
                        </tr>
{% endif %}
{% endfor %}
{% endif %}
{% if associations.HasOne %}
{% for alias, details in associations.HasOne %}
                        <tr>
                            <th><?= __('{{ alias|underscore|singularize|humanize }}') ?></th>
                            <td><?= ${{ singularVar }}->hasValue('{{ details.property }}') ? $this->Html->link(${{ singularVar }}->{{ details.property }}->{{ details.displayField }}, ['controller' => '{{ details.controller }}', 'action' => 'view', ${{ singularVar }}->{{ details.property }}->{{ details.primaryKey[0] }}], ['class' => 'btn btn-link']) : '' ?></td>
                        </tr>
{% endfor %}
{% endif %}
{% if groupedFields.number %}
{% for field in groupedFields.number %}
                        <tr>
                            <th><?= __('{{ field|humanize }}') ?></th>
{% set columnData = Bake.columnData(field, schema) %}
{% if columnData.null %}
                            <td><?= ${{ singularVar }}->{{ field }} === null ? '' : $this->Number->format(${{ singularVar }}->{{ field }}) ?></td>
{% else %}
                            <td><?= $this->Number->format(${{ singularVar }}->{{ field }}) ?></td>
{% endif %}
                        </tr>
{% endfor %}
{% endif %}
{% if groupedFields.enum %}
{% for field in groupedFields.enum %}
                        <tr>
                            <th><?= __('{{ field|humanize }}') ?></th>
{% set columnData = Bake.columnData(field, schema) %}
{% set supportsLabel = Bake.enumSupportsLabel(field, schema) %}
{% if columnData.null %}
                            <td><?= ${{ singularVar }}->{{ field }} === null ? '' : h(${{ singularVar }}->{{ field }}->{% if supportsLabel %}label(){% else %}value{% endif %}) ?></td>
{% else %}
                            <td><?= h(${{ singularVar }}->{{ field }}->{% if supportsLabel %}label(){% else %}value{% endif %}) ?></td>
{% endif %}
                        </tr>
{% endfor %}
{% endif %}
{% if groupedFields.date %}
{% for field in groupedFields.date %}
                        <tr>
                            <th><?= __('{{ field|humanize }}') ?></th>
                            <td><?= h(${{ singularVar }}->{{ field }}) ?></td>
                        </tr>
{% endfor %}
{% endif %}
{% if groupedFields.boolean %}
{% for field in groupedFields.boolean %}
                        <tr>
                            <th><?= __('{{ field|humanize }}') ?></th>
                            <td><?= ${{ singularVar }}->{{ field }} ? '<span class="badge bg-success">' . __('Yes') . '</span>' : '<span class="badge bg-danger">' . __('No') . '</span>'; ?></td>
                        </tr>
{% endfor %}
{% endif %}
                    </table>
{% if groupedFields.text %}
{% for field in groupedFields.text %}
                    <div class="card mt-4">
                        <div class="card-body">
                            <h5 class="card-title"><?= __('{{ field|humanize }}') ?></h5>
                            <p class="card-text"><?= html_entity_decode(${{ singularVar }}->{{ field }}); ?></p>
                        </div>
                    </div>
{% endfor %}
{% endif %}
{% set relations = associations.BelongsToMany|merge(associations.HasMany) %}
{% for alias, details in relations %}
{% set otherSingularVar = alias|singularize|variable %}
{% set otherPluralHumanName = details.controller|underscore|humanize %}
                    <div class="card mt-4">
                        <div class="card-body">
                            <h4 class="card-title"><?= __('Related {{ otherPluralHumanName }}') ?></h4>
                            <?php if (!empty(${{ singularVar }}->{{ details.property }})) : ?>
                            <div class="table-responsive">
                                <table class="table table-striped">
                                    <thead>
                                        <tr>
{% for field in details.fields %}
                                            <th><?= __('{{ field|humanize }}') ?></th>
{% endfor %}
                                            <th class="actions"><?= __('Actions') ?></th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <?php foreach (${{ singularVar }}->{{ details.property }} as ${{ otherSingularVar }}) : ?>
                                        <tr>
{% for field in details.fields %}
                                            <td><?= h(${{ otherSingularVar }}->{{ field }}) ?></td>
{% endfor %}
{% set otherPk = '$' ~ otherSingularVar ~ '->' ~ details.primaryKey[0] %}
                                            <td class="actions">
                                                <?= $this->element('evd_dropdown', ['controller' => '{{ details.controller }}', 'model' => ${{ otherSingularVar }}, 'display' => '{{ details.displayField }}']); ?>
                                            </td>
                                        </tr>
                                        <?php endforeach; ?>
                                    </tbody>
                                </table>
                            </div>
                            <?php endif; ?>
                        </div>
                    </div>
{% endfor %}
                </div>
            </div>
        </div>
    </div>
</div>