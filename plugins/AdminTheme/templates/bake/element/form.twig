{#
/**
 * CakePHP(tm) : Rapid Development Framework (https://cakephp.org)
 * Copyright (c) Cake Software Foundation, Inc. (https://cakefoundation.org)
 *
 * Licensed under The MIT License
 * For full copyright and license information, please see the LICENSE.txt
 * Redistributions of files must retain the above copyright notice.
 *
 * @copyright     Copyright (c) Cake Software Foundation, Inc. (https://cakefoundation.org)
 * @link          https://cakephp.org CakePHP(tm) Project
 * @since         2.0.0
 * @license       https://www.opensource.org/licenses/mit-license.php MIT License
 */
#}
{% set fields = Bake.filterFields(fields, schema, modelObject) %}
<?= $this->Form->create(${{ singularVar }}, ['class' => 'needs-validation', 'novalidate' => true]) ?>
<div class="row">
{% for field in fields %}
{% if field not in primaryKey %}
    {% if loop.index0 % 2 == 0 %}
    <div class="col-md-6 mb-3">
    {% else %}
    <div class="col-md-6 mb-3">
    {% endif %}
    {% set fieldData = Bake.columnData(field, schema) %}
    {% if keyFields[field] is defined %}
        {% if fieldData.null %}
        <?= $this->Form->control('{{ field }}', [
            'options' => ${{ keyFields[field] }},
            'empty' => true,
            'class' => 'form-control' . ($this->Form->isFieldError('{{ field }}') ? ' is-invalid' : ''),
            'required' => {{ fieldData.null ? 'false' : 'true' }}
        ]) ?>
        {% else %}
        <?= $this->Form->control('{{ field }}', [
            'options' => ${{ keyFields[field] }},
            'class' => 'form-control' . ($this->Form->isFieldError('{{ field }}') ? ' is-invalid' : ''),
            'required' => {{ fieldData.null ? 'false' : 'true' }}
        ]) ?>
        {% endif %}
    {% elseif field not in ['created', 'modified', 'updated'] %}
        {% if fieldData.type in ['date', 'datetime', 'time'] and fieldData.null %}
        <?= $this->Form->control('{{ field }}', [
            'empty' => true,
            'class' => 'form-control' . ($this->Form->isFieldError('{{ field }}') ? ' is-invalid' : ''),
            'required' => false
        ]) ?>
        {% elseif fieldData.type == 'boolean' %}
        <?= $this->Form->control('{{ field }}', [
            'class' => 'form-check-input' . ($this->Form->isFieldError('{{ field }}') ? ' is-invalid' : ''),
            'required' => {{ fieldData.null ? 'false' : 'true' }}
        ]) ?>
        {% else %}
        <?= $this->Form->control('{{ field }}', [
            'class' => 'form-control' . ($this->Form->isFieldError('{{ field }}') ? ' is-invalid' : ''),
            'required' => {{ fieldData.null ? 'false' : 'true' }}
        ]) ?>
        {% endif %}
    {% endif %}
    </div>
{% endif %}
{% endfor %}
</div>

{% if associations.BelongsToMany is defined %}
{% for assocName, assocData in associations.BelongsToMany %}
<div class="row">
    <div class="col-md-12 mb-3">
        <?= $this->Form->label('{{ assocData.property }}._ids', __('Associated {{ assocData.alias }}')) ?>
        <div class="input-group">
            <input type="text" class="form-control" id="{{ assocData.variable }}Search" placeholder="Search {{ assocData.alias }}...">
            <button class="btn btn-outline-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">Select {{ assocData.alias }}</button>
            <ul class="dropdown-menu dropdown-menu-end" style="max-height: 300px; overflow-y: auto;">
                <?php foreach (${{ assocData.variable }} as $value => $label): ?>
                    <li>
                        <label class="dropdown-item">
                            <input type="checkbox" name="{{ assocData.property }}[_ids][]" value="<?= h($value) ?>" class="me-2">
                            <?= h($label) ?>
                        </label>
                    </li>
                <?php endforeach; ?>
            </ul>
        </div>
    </div>
</div>
{% endfor %}
{% endif %}
<div class="row">
    <div class="col-md-12">
        <div class="mt-4 mb-3">
            <?= $this->Form->button(__('{{ action|humanize }} {{ singularHumanName }}'), [
                'class' => 'btn btn-primary'
            ]) ?>
        </div>
    </div>
</div>
<?= $this->Form->end() ?>